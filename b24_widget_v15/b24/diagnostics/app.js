
const BUILD = { num: 15, tag: 'v15' };
function parseQuery(){ const q={}; location.search.replace(/^\?/,'').split('&').forEach(p=>{ if(!p) return; const [k,v]=p.split('='); q[decodeURIComponent(k)]=decodeURIComponent((v||'').replace(/\+/g,' ')); }); return q; }
function render(){ const q = parseQuery(); document.getElementById('path').textContent = location.pathname; document.getElementById('query').textContent = JSON.stringify(q, null, 2); document.getElementById('bxType').textContent = typeof BX24; document.getElementById('ref').textContent = document.referrer ? 'yes' : 'no'; document.getElementById('buildBadge').textContent = `Проверка ${BUILD.num}`; document.getElementById('revBadge').textContent = q.rev ? `rev=${q.rev}` : 'rev=?'; }
function out(obj){ const el = document.getElementById('out'); el.textContent = typeof obj==='string' ? obj : JSON.stringify(obj, null, 2); }
async function ensureBX(){ const started = Date.now(); while(!window.BX24 && Date.now()-started<5000){ await new Promise(r=>setTimeout(r,80)); } if(!window.BX24){ out('BX24 not available'); return false; } try{ await new Promise(res=>{BX24.init(()=>res()); setTimeout(res, 1200)}); }catch{} return true; }
document.addEventListener('DOMContentLoaded', async ()=>{ render(); document.getElementById('refreshBtn').addEventListener('click', render); document.getElementById('btnPlacement').addEventListener('click', async ()=>{ if(!(await ensureBX())) return out('BX24 недоступен'); BX24.placement.info(d=>out(d)); }); document.getElementById('btnAuth').addEventListener('click', async ()=>{ if(!(await ensureBX())) return out('BX24 недоступен'); out(BX24.getAuth()); }); document.getElementById('btnApp').addEventListener('click', async ()=>{ if(!(await ensureBX())) return out('BX24 недоступен'); BX24.callMethod('app.info', {}, r=>{ if(r.error()) out(r.error()); else out(r.data()); }); }); });
