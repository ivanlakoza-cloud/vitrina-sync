name: Deploy to Yandex Cloud (1 VM)

on:
  workflow_dispatch:        # запуск вручную из Actions
  # если хочешь автозапуск по коммиту — раскомментируй блок ниже
  # push:
  #   branches: [ main ]
  #   paths:
  #     - 'app/**'
  #     - 'components/**'
  #     - 'lib/**'
  #     - 'public/**'
  #     - 'next.config.*'
  #     - 'Dockerfile'
  #     - 'deploy/yandex-single-vm/**'
  #     - 'package.json'
  #     - 'pnpm-lock.yaml'
  #     - 'yarn.lock'
  #     - 'package-lock.json'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Ensure dirs on VM (keep .env!)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.YC_VM_HOST }}
          username: ${{ secrets.YC_VM_USER }}
          key: ${{ secrets.YC_VM_SSH_KEY }}
          script: |
            set -e
            mkdir -p ~/app/src
            # чистим только src, чтобы не трогать deploy/.env
            rm -rf ~/app/src/*

      - name: Copy repo to VM (to ~/app/src)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.YC_VM_HOST }}
          username: ${{ secrets.YC_VM_USER }}
          key: ${{ secrets.YC_VM_SSH_KEY }}
          source: "."
          target: "/home/${{ secrets.YC_VM_USER }}/app/src"
          overwrite: true
          strip_components: 0
          rm: false
          # чуть экономим трафик
          exclude: |
            .git
            node_modules

      - name: Build & restart containers
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.YC_VM_HOST }}
          username: ${{ secrets.YC_VM_USER }}
          key: ${{ secrets.YC_VM_SSH_KEY }}
          script: |
            set -e
            # 1) гарантируем папку деплоя и .env
            mkdir -p ~/app/deploy/yandex-single-vm
            [ -f ~/app/deploy/yandex-single-vm/.env ] || cat > ~/app/deploy/yandex-single-vm/.env << 'EOF'
            NODE_ENV=production
            PORT=3000
            NEXT_PUBLIC_SITE_URL=https://vitran.ru
            NEXT_TELEMETRY_DISABLED=1
            EOF

            # 2) копируем compose и Caddyfile из репозитория в папку деплоя
            cp -f ~/app/src/deploy/yandex-single-vm/docker-compose.yml ~/app/deploy/yandex-single-vm/docker-compose.yml
            cp -f ~/app/src/deploy/yandex-single-vm/Caddyfile        ~/app/deploy/yandex-single-vm/Caddyfile

            # 3) собираем/перезапускаем
            cd ~/app/deploy/yandex-single-vm
            docker compose up -d --build --remove-orphans
            docker image prune -f

